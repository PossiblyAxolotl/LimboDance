[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.5);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.8000000715255737, 0.001847471809014678, 0.0,
		1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.5);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)

[sub_resource id=5 type="ArrayMesh"]

resource_name = "Icosphere"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, -1.0, 0.0, 0.425323, -0.850654, 0.309011, -0.162456, -0.850654, 0.499995, 0.723607, -0.44722, 0.525725, 0.425323, -0.850654, 0.309011, 0.850648, -0.525736, 0.0, 0.0, -1.0, 0.0, -0.162456, -0.850654, 0.499995, -0.52573, -0.850652, 0.0, 0.0, -1.0, 0.0, -0.52573, -0.850652, 0.0, -0.162456, -0.850654, -0.499995, 0.0, -1.0, 0.0, -0.162456, -0.850654, -0.499995, 0.425323, -0.850654, -0.309011, 0.723607, -0.44722, 0.525725, 0.850648, -0.525736, 0.0, 0.951058, 0.0, 0.309013, -0.276388, -0.44722, 0.850649, 0.262869, -0.525738, 0.809012, 0.0, 0.0, 1.0, -0.894426, -0.447216, 0.0, -0.688189, -0.525736, 0.499997, -0.951058, 0.0, 0.309013, -0.276388, -0.44722, -0.850649, -0.688189, -0.525736, -0.499997, -0.587786, 0.0, -0.809017, 0.723607, -0.44722, -0.525725, 0.262869, -0.525738, -0.809012, 0.587786, 0.0, -0.809017, 0.723607, -0.44722, 0.525725, 0.951058, 0.0, 0.309013, 0.587786, 0.0, 0.809017, -0.276388, -0.44722, 0.850649, 0.0, 0.0, 1.0, -0.587786, 0.0, 0.809017, -0.894426, -0.447216, 0.0, -0.951058, 0.0, 0.309013, -0.951058, 0.0, -0.309013, -0.723607, 0.44722, 0.525725, -0.262869, 0.525738, 0.809012, -0.425323, 0.850654, 0.309011, -0.723607, 0.44722, -0.525725, -0.850648, 0.525736, 0.0, -0.425323, 0.850654, -0.309011, 0.276388, 0.44722, -0.850649, -0.262869, 0.525738, -0.809012, 0.162456, 0.850654, -0.499995, 0.894426, 0.447216, 0.0, 0.688189, 0.525736, -0.499997, 0.52573, 0.850652, 0.0, 0.52573, 0.850652, 0.0, 0.162456, 0.850654, -0.499995, 0.0, 1.0, 0.0, 0.688189, 0.525736, -0.499997, 0.276388, 0.44722, -0.850649, 0.162456, 0.850654, -0.499995, 0.162456, 0.850654, -0.499995, -0.425323, 0.850654, -0.309011, 0.0, 1.0, 0.0, 0.162456, 0.850654, -0.499995, -0.262869, 0.525738, -0.809012, -0.425323, 0.850654, -0.309011, -0.262869, 0.525738, -0.809012, -0.723607, 0.44722, -0.525725, -0.425323, 0.850654, -0.309011, -0.425323, 0.850654, -0.309011, -0.425323, 0.850654, 0.309011, 0.0, 1.0, 0.0, -0.850648, 0.525736, 0.0, -0.723607, 0.44722, 0.525725, -0.425323, 0.850654, 0.309011, -0.425323, 0.850654, 0.309011, 0.162456, 0.850654, 0.499995, 0.0, 1.0, 0.0, -0.425323, 0.850654, 0.309011, -0.262869, 0.525738, 0.809012, 0.162456, 0.850654, 0.499995, -0.262869, 0.525738, 0.809012, 0.276388, 0.44722, 0.850649, 0.162456, 0.850654, 0.499995, 0.162456, 0.850654, 0.499995, 0.52573, 0.850652, 0.0, 0.0, 1.0, 0.0, 0.162456, 0.850654, 0.499995, 0.688189, 0.525736, 0.499997, 0.52573, 0.850652, 0.0, 0.688189, 0.525736, 0.499997, 0.894426, 0.447216, 0.0, 0.52573, 0.850652, 0.0, 0.951058, 0.0, -0.309013, 0.688189, 0.525736, -0.499997, 0.894426, 0.447216, 0.0, 0.951058, 0.0, -0.309013, 0.587786, 0.0, -0.809017, 0.688189, 0.525736, -0.499997, 0.587786, 0.0, -0.809017, 0.276388, 0.44722, -0.850649, 0.688189, 0.525736, -0.499997, 0.0, 0.0, -1.0, -0.262869, 0.525738, -0.809012, 0.276388, 0.44722, -0.850649, 0.0, 0.0, -1.0, -0.587786, 0.0, -0.809017, -0.262869, 0.525738, -0.809012, -0.587786, 0.0, -0.809017, -0.723607, 0.44722, -0.525725, -0.262869, 0.525738, -0.809012, -0.951058, 0.0, -0.309013, -0.850648, 0.525736, 0.0, -0.723607, 0.44722, -0.525725, -0.951058, 0.0, -0.309013, -0.951058, 0.0, 0.309013, -0.850648, 0.525736, 0.0, -0.951058, 0.0, 0.309013, -0.723607, 0.44722, 0.525725, -0.850648, 0.525736, 0.0, -0.587786, 0.0, 0.809017, -0.262869, 0.525738, 0.809012, -0.723607, 0.44722, 0.525725, -0.587786, 0.0, 0.809017, 0.0, 0.0, 1.0, -0.262869, 0.525738, 0.809012, 0.0, 0.0, 1.0, 0.276388, 0.44722, 0.850649, -0.262869, 0.525738, 0.809012, 0.587786, 0.0, 0.809017, 0.688189, 0.525736, 0.499997, 0.276388, 0.44722, 0.850649, 0.587786, 0.0, 0.809017, 0.951058, 0.0, 0.309013, 0.688189, 0.525736, 0.499997, 0.951058, 0.0, 0.309013, 0.894426, 0.447216, 0.0, 0.688189, 0.525736, 0.499997, 0.587786, 0.0, -0.809017, 0.0, 0.0, -1.0, 0.276388, 0.44722, -0.850649, 0.587786, 0.0, -0.809017, 0.262869, -0.525738, -0.809012, 0.0, 0.0, -1.0, 0.262869, -0.525738, -0.809012, -0.276388, -0.44722, -0.850649, 0.0, 0.0, -1.0, -0.587786, 0.0, -0.809017, -0.951058, 0.0, -0.309013, -0.723607, 0.44722, -0.525725, -0.587786, 0.0, -0.809017, -0.688189, -0.525736, -0.499997, -0.951058, 0.0, -0.309013, -0.688189, -0.525736, -0.499997, -0.894426, -0.447216, 0.0, -0.951058, 0.0, -0.309013, -0.951058, 0.0, 0.309013, -0.688189, -0.525736, 0.499997, -0.587786, 0.0, 0.809017, -0.688189, -0.525736, 0.499997, -0.276388, -0.44722, 0.850649, -0.587786, 0.0, 0.809017, 0.0, 0.0, 1.0, 0.587786, 0.0, 0.809017, 0.276388, 0.44722, 0.850649, 0.0, 0.0, 1.0, 0.262869, -0.525738, 0.809012, 0.587786, 0.0, 0.809017, 0.951058, 0.0, 0.309013, 0.951058, 0.0, -0.309013, 0.894426, 0.447216, 0.0, 0.951058, 0.0, 0.309013, 0.850648, -0.525736, 0.0, 0.951058, 0.0, -0.309013, 0.850648, -0.525736, 0.0, 0.723607, -0.44722, -0.525725, 0.951058, 0.0, -0.309013, 0.425323, -0.850654, -0.309011, 0.262869, -0.525738, -0.809012, 0.723607, -0.44722, -0.525725, 0.425323, -0.850654, -0.309011, -0.162456, -0.850654, -0.499995, 0.262869, -0.525738, -0.809012, -0.162456, -0.850654, -0.499995, -0.276388, -0.44722, -0.850649, 0.262869, -0.525738, -0.809012, -0.162456, -0.850654, -0.499995, -0.688189, -0.525736, -0.499997, -0.276388, -0.44722, -0.850649, -0.162456, -0.850654, -0.499995, -0.52573, -0.850652, 0.0, -0.688189, -0.525736, -0.499997, -0.52573, -0.850652, 0.0, -0.894426, -0.447216, 0.0, -0.688189, -0.525736, -0.499997, -0.52573, -0.850652, 0.0, -0.688189, -0.525736, 0.499997, -0.894426, -0.447216, 0.0, -0.52573, -0.850652, 0.0, -0.162456, -0.850654, 0.499995, -0.688189, -0.525736, 0.499997, -0.162456, -0.850654, 0.499995, -0.276388, -0.44722, 0.850649, -0.688189, -0.525736, 0.499997, 0.850648, -0.525736, 0.0, 0.425323, -0.850654, -0.309011, 0.723607, -0.44722, -0.525725, 0.850648, -0.525736, 0.0, 0.425323, -0.850654, 0.309011, 0.425323, -0.850654, -0.309011, 0.425323, -0.850654, 0.309011, 0.0, -1.0, 0.0, 0.425323, -0.850654, -0.309011, -0.162456, -0.850654, 0.499995, 0.262869, -0.525738, 0.809012, -0.276388, -0.44722, 0.850649, -0.162456, -0.850654, 0.499995, 0.425323, -0.850654, 0.309011, 0.262869, -0.525738, 0.809012, 0.425323, -0.850654, 0.309011, 0.723607, -0.44722, 0.525725, 0.262869, -0.525738, 0.809012),
		Vector3Array(0.102381, -0.943523, 0.31509, 0.102381, -0.943523, 0.31509, 0.102381, -0.943523, 0.31509, 0.700224, -0.661699, 0.268032, 0.700224, -0.661699, 0.268032, 0.700224, -0.661699, 0.268032, -0.268034, -0.943523, 0.194736, -0.268034, -0.943523, 0.194736, -0.268034, -0.943523, 0.194736, -0.268034, -0.943523, -0.194737, -0.268034, -0.943523, -0.194737, -0.268034, -0.943523, -0.194737, 0.102381, -0.943523, -0.31509, 0.102381, -0.943523, -0.31509, 0.102381, -0.943523, -0.31509, 0.904989, -0.330385, 0.268032, 0.904989, -0.330385, 0.268032, 0.904989, -0.330385, 0.268032, 0.0247466, -0.330386, 0.943521, 0.0247466, -0.330386, 0.943521, 0.0247466, -0.330386, 0.943521, -0.889697, -0.330385, 0.315095, -0.889697, -0.330385, 0.315095, -0.889697, -0.330385, 0.315095, -0.574602, -0.330388, -0.748784, -0.574602, -0.330388, -0.748784, -0.574602, -0.330388, -0.748784, 0.534576, -0.330387, -0.777865, 0.534576, -0.330387, -0.777865, 0.534576, -0.330387, -0.777865, 0.802609, -0.125627, 0.583126, 0.802609, -0.125627, 0.583126, 0.802609, -0.125627, 0.583126, -0.306569, -0.125629, 0.943522, -0.306569, -0.125629, 0.943522, -0.306569, -0.125629, 0.943522, -0.992077, -0.125628, 0.0, -0.992077, -0.125628, 0.0, -0.992077, -0.125628, 0.0, -0.4713, 0.661699, 0.583122, -0.4713, 0.661699, 0.583122, -0.4713, 0.661699, 0.583122, -0.700224, 0.661699, -0.268032, -0.700224, 0.661699, -0.268032, -0.700224, 0.661699, -0.268032, 0.0385304, 0.661699, -0.748779, 0.0385304, 0.661699, -0.748779, 0.0385304, 0.661699, -0.748779, 0.724042, 0.661695, -0.194736, 0.724042, 0.661695, -0.194736, 0.724042, 0.661695, -0.194736, 0.268034, 0.943523, -0.194737, 0.268034, 0.943523, -0.194737, 0.268034, 0.943523, -0.194737, 0.408946, 0.661699, -0.628425, 0.408946, 0.661699, -0.628425, 0.408946, 0.661699, -0.628425, -0.102381, 0.943523, -0.31509, -0.102381, 0.943523, -0.31509, -0.102381, 0.943523, -0.31509, -0.187594, 0.794658, -0.577345, -0.187594, 0.794658, -0.577345, -0.187594, 0.794658, -0.577345, -0.4713, 0.661699, -0.583122, -0.4713, 0.661699, -0.583122, -0.4713, 0.661699, -0.583122, -0.331305, 0.943524, 0.0, -0.331305, 0.943524, 0.0, -0.331305, 0.943524, 0.0, -0.700224, 0.661699, 0.268032, -0.700224, 0.661699, 0.268032, -0.700224, 0.661699, 0.268032, -0.102381, 0.943523, 0.31509, -0.102381, 0.943523, 0.31509, -0.102381, 0.943523, 0.31509, -0.187594, 0.794658, 0.577345, -0.187594, 0.794658, 0.577345, -0.187594, 0.794658, 0.577345, 0.0385304, 0.661699, 0.748779, 0.0385304, 0.661699, 0.748779, 0.0385304, 0.661699, 0.748779, 0.268034, 0.943523, 0.194737, 0.268034, 0.943523, 0.194737, 0.268034, 0.943523, 0.194737, 0.491119, 0.794657, 0.356821, 0.491119, 0.794657, 0.356821, 0.491119, 0.794657, 0.356821, 0.724042, 0.661695, 0.194736, 0.724042, 0.661695, 0.194736, 0.724042, 0.661695, 0.194736, 0.889697, 0.330385, -0.315095, 0.889697, 0.330385, -0.315095, 0.889697, 0.330385, -0.315095, 0.794656, 0.187595, -0.577348, 0.794656, 0.187595, -0.577348, 0.794656, 0.187595, -0.577348, 0.574602, 0.330388, -0.748784, 0.574602, 0.330388, -0.748784, 0.574602, 0.330388, -0.748784, -0.0247466, 0.330386, -0.943521, -0.0247466, 0.330386, -0.943521, -0.0247466, 0.330386, -0.943521, -0.303531, 0.187597, -0.934171, -0.303531, 0.187597, -0.934171, -0.303531, 0.187597, -0.934171, -0.534576, 0.330387, -0.777865, -0.534576, 0.330387, -0.777865, -0.534576, 0.330387, -0.777865, -0.904989, 0.330385, -0.268032, -0.904989, 0.330385, -0.268032, -0.904989, 0.330385, -0.268032, -0.982246, 0.187599, 0.0, -0.982246, 0.187599, 0.0, -0.982246, 0.187599, 0.0, -0.904989, 0.330385, 0.268031, -0.904989, 0.330385, 0.268031, -0.904989, 0.330385, 0.268031, -0.534576, 0.330387, 0.777865, -0.534576, 0.330387, 0.777865, -0.534576, 0.330387, 0.777865, -0.303531, 0.187597, 0.934171, -0.303531, 0.187597, 0.934171, -0.303531, 0.187597, 0.934171, -0.0247466, 0.330386, 0.943521, -0.0247466, 0.330386, 0.943521, -0.0247466, 0.330386, 0.943521, 0.574602, 0.330388, 0.748784, 0.574602, 0.330388, 0.748784, 0.574602, 0.330388, 0.748784, 0.794656, 0.187595, 0.577348, 0.794656, 0.187595, 0.577348, 0.794656, 0.187595, 0.577348, 0.889697, 0.330385, 0.315095, 0.889697, 0.330385, 0.315095, 0.889697, 0.330385, 0.315095, 0.306569, 0.125629, -0.943522, 0.306569, 0.125629, -0.943522, 0.306569, 0.125629, -0.943522, 0.303531, -0.187597, -0.934171, 0.303531, -0.187597, -0.934171, 0.303531, -0.187597, -0.934171, 0.0247466, -0.330386, -0.943521, 0.0247466, -0.330386, -0.943521, 0.0247466, -0.330386, -0.943521, -0.802609, 0.125627, -0.583126, -0.802609, 0.125627, -0.583126, -0.802609, 0.125627, -0.583126, -0.794656, -0.187595, -0.577348, -0.794656, -0.187595, -0.577348, -0.794656, -0.187595, -0.577348, -0.889697, -0.330385, -0.315095, -0.889697, -0.330385, -0.315095, -0.889697, -0.330385, -0.315095, -0.794656, -0.187595, 0.577348, -0.794656, -0.187595, 0.577348, -0.794656, -0.187595, 0.577348, -0.574602, -0.330388, 0.748784, -0.574602, -0.330388, 0.748784, -0.574602, -0.330388, 0.748784, 0.306569, 0.125629, 0.943522, 0.306569, 0.125629, 0.943522, 0.306569, 0.125629, 0.943522, 0.303531, -0.187597, 0.934171, 0.303531, -0.187597, 0.934171, 0.303531, -0.187597, 0.934171, 0.992077, 0.125628, 0.0, 0.992077, 0.125628, 0.0, 0.992077, 0.125628, 0.0, 0.982246, -0.187599, 0.0, 0.982246, -0.187599, 0.0, 0.982246, -0.187599, 0.0, 0.904989, -0.330385, -0.268031, 0.904989, -0.330385, -0.268031, 0.904989, -0.330385, -0.268031, 0.4713, -0.661699, -0.583122, 0.4713, -0.661699, -0.583122, 0.4713, -0.661699, -0.583122, 0.187594, -0.794658, -0.577345, 0.187594, -0.794658, -0.577345, 0.187594, -0.794658, -0.577345, -0.0385304, -0.661699, -0.748779, -0.0385304, -0.661699, -0.748779, -0.0385304, -0.661699, -0.748779, -0.408946, -0.661698, -0.628425, -0.408946, -0.661698, -0.628425, -0.408946, -0.661698, -0.628425, -0.491119, -0.794657, -0.356821, -0.491119, -0.794657, -0.356821, -0.491119, -0.794657, -0.356821, -0.724042, -0.661695, -0.194736, -0.724042, -0.661695, -0.194736, -0.724042, -0.661695, -0.194736, -0.724042, -0.661695, 0.194736, -0.724042, -0.661695, 0.194736, -0.724042, -0.661695, 0.194736, -0.491119, -0.794657, 0.356821, -0.491119, -0.794657, 0.356821, -0.491119, -0.794657, 0.356821, -0.408946, -0.661698, 0.628425, -0.408946, -0.661698, 0.628425, -0.408946, -0.661698, 0.628425, 0.700224, -0.661699, -0.268032, 0.700224, -0.661699, -0.268032, 0.700224, -0.661699, -0.268032, 0.60706, -0.794656, 0.0, 0.60706, -0.794656, 0.0, 0.60706, -0.794656, 0.0, 0.331305, -0.943524, 0.0, 0.331305, -0.943524, 0.0, 0.331305, -0.943524, 0.0, -0.0385304, -0.661699, 0.748779, -0.0385304, -0.661699, 0.748779, -0.0385304, -0.661699, 0.748779, 0.187594, -0.794658, 0.577345, 0.187594, -0.794658, 0.577345, 0.187594, -0.794658, 0.577345, 0.4713, -0.661699, 0.583122, 0.4713, -0.661699, 0.583122, 0.4713, -0.661699, 0.583122),
		FloatArray(-0.951055, -3.86478e-07, 0.309022, -1.0, -0.951055, -3.86478e-07, 0.309022, -1.0, -0.951055, -3.86478e-07, 0.309022, -1.0, -0.232451, 0.143664, 0.961939, -1.0, -0.232451, 0.143664, 0.961939, -1.0, -0.232451, 0.143664, 0.961939, -1.0, -0.587792, 4.46627e-06, -0.809012, -1.0, -0.587792, 4.46628e-06, -0.809012, -1.0, -0.587792, 4.46627e-06, -0.809012, -1.0, 0.587792, -4.45222e-06, -0.809012, -1.0, 0.587792, -4.45222e-06, -0.809012, -1.0, 0.587792, -4.45222e-06, -0.809012, -1.0, 0.951055, 3.86478e-07, 0.309022, -1.0, 0.951055, 3.86478e-07, 0.309022, -1.0, 0.951055, 3.86478e-07, 0.309022, -1.0, -0.232451, 0.143664, 0.961939, -1.0, -0.232451, 0.143664, 0.961939, -1.0, -0.232451, 0.143664, 0.961939, -1.0, -0.986689, 0.143666, 0.0761852, -1.0, -0.986689, 0.143666, 0.0761852, -1.0, -0.986689, 0.143666, 0.0761852, -1.0, -0.377356, 0.143671, -0.914856, -1.0, -0.377356, 0.143671, -0.914856, -1.0, -0.377356, 0.143671, -0.914856, -1.0, 0.753474, 0.143662, -0.64159, -1.0, 0.753474, 0.143662, -0.64159, -1.0, 0.753474, 0.143662, -0.64159, -1.0, 0.843023, 0.143666, 0.518335, -1.0, 0.843023, 0.143666, 0.518335, -1.0, 0.843023, 0.143666, 0.518335, -1.0, -0.587783, 3.74398e-09, 0.809018, -1.0, -0.587783, 3.74398e-09, 0.809018, -1.0, -0.587783, 3.74398e-09, 0.809018, -1.0, -0.951056, 3.74403e-09, -0.309017, -1.0, -0.951056, 3.74403e-09, -0.309017, -1.0, -0.951056, 3.74403e-09, -0.309017, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -0.843023, -0.143666, -0.518335, -1.0, -0.843023, -0.143666, -0.518335, -1.0, -0.843023, -0.143666, -0.518335, -1.0, 0.232451, -0.143664, -0.961939, -1.0, 0.232451, -0.143664, -0.961939, -1.0, 0.232451, -0.143664, -0.961939, -1.0, 0.986689, -0.143666, -0.0761852, -1.0, 0.986689, -0.143666, -0.0761852, -1.0, 0.986689, -0.143666, -0.0761852, -1.0, 0.377356, -0.143671, 0.914856, -1.0, 0.377356, -0.143671, 0.914856, -1.0, 0.377356, -0.143671, 0.914856, -1.0, 0.587792, -4.34276e-06, 0.809012, -1.0, 0.587792, -4.34276e-06, 0.809012, -1.0, 0.587792, -4.34276e-06, 0.809012, -1.0, 0.753474, 0.143662, 0.64159, -1.0, 0.753474, 0.143662, 0.64159, -1.0, 0.753475, 0.143662, 0.64159, -1.0, 0.951055, 2.77801e-07, -0.309022, -1.0, 0.951055, 2.77801e-07, -0.309022, -1.0, 0.951055, 2.77801e-07, -0.309022, -1.0, 0.951055, 2.72402e-07, -0.309022, -1.0, 0.951055, 2.72402e-07, -0.309022, -1.0, 0.951055, 2.72402e-07, -0.309022, -1.0, 0.843023, 0.143666, -0.518335, -1.0, 0.843023, 0.143666, -0.518335, -1.0, 0.843023, 0.143666, -0.518335, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -0.232451, 0.143664, -0.961939, -1.0, -0.232451, 0.143664, -0.961939, -1.0, -0.232451, 0.143664, -0.961939, -1.0, -0.951055, -2.9186e-07, -0.309022, -1.0, -0.951055, -2.9186e-07, -0.309022, -1.0, -0.951055, -2.9186e-07, -0.309022, -1.0, -0.951055, -2.72402e-07, -0.309022, -1.0, -0.951055, -2.72402e-07, -0.309022, -1.0, -0.951055, -2.72402e-07, -0.309022, -1.0, -0.986689, 0.143666, -0.0761852, -1.0, -0.986689, 0.143666, -0.0761852, -1.0, -0.986689, 0.143666, -0.0761852, -1.0, -0.587792, 4.34276e-06, 0.809012, -1.0, -0.587792, 4.34276e-06, 0.809012, -1.0, -0.587792, 4.34276e-06, 0.809012, -1.0, -0.587792, 4.32285e-06, 0.809012, -1.0, -0.587792, 4.32285e-06, 0.809012, -1.0, -0.587792, 4.32285e-06, 0.809012, -1.0, -0.377356, 0.143671, 0.914856, -1.0, -0.377356, 0.143671, 0.914856, -1.0, -0.377356, 0.143671, 0.914856, -1.0, 0.377356, -0.143671, 0.914856, -1.0, 0.377356, -0.143671, 0.914856, -1.0, 0.377356, -0.143671, 0.914856, -1.0, 0.587783, -5.59077e-09, 0.809018, -1.0, 0.587783, -5.59077e-09, 0.809018, -1.0, 0.587783, -5.59077e-09, 0.809019, -1.0, 0.753475, 0.143662, 0.64159, -1.0, 0.753475, 0.143662, 0.64159, -1.0, 0.753474, 0.143662, 0.64159, -1.0, 0.986689, -0.143666, -0.0761852, -1.0, 0.986689, -0.143666, -0.0761852, -1.0, 0.986689, -0.143666, -0.0761852, -1.0, 0.951056, 0.0, -0.309017, -1.0, 0.951056, 0.0, -0.309017, -1.0, 0.951056, 0.0, -0.309017, -1.0, 0.843023, 0.143666, -0.518335, -1.0, 0.843023, 0.143666, -0.518335, -1.0, 0.843023, 0.143666, -0.518335, -1.0, 0.232451, -0.143664, -0.961939, -1.0, 0.232451, -0.143664, -0.961939, -1.0, 0.232451, -0.143664, -0.961939, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -0.232451, 0.143664, -0.961939, -1.0, -0.232451, 0.143664, -0.961939, -1.0, -0.232451, 0.143664, -0.961939, -1.0, -0.843023, -0.143666, -0.518335, -1.0, -0.843023, -0.143666, -0.518335, -1.0, -0.843023, -0.143666, -0.518335, -1.0, -0.951056, 0.0, -0.309017, -1.0, -0.951056, 0.0, -0.309017, -1.0, -0.951056, 0.0, -0.309017, -1.0, -0.986689, 0.143666, -0.0761852, -1.0, -0.986689, 0.143666, -0.0761852, -1.0, -0.986689, 0.143666, -0.0761852, -1.0, -0.753475, -0.143662, 0.64159, -1.0, -0.753474, -0.143662, 0.64159, -1.0, -0.753474, -0.143662, 0.64159, -1.0, -0.587783, 5.59077e-09, 0.809018, -1.0, -0.587783, 5.59077e-09, 0.809018, -1.0, -0.587783, 5.59077e-09, 0.809019, -1.0, -0.377356, 0.143671, 0.914856, -1.0, -0.377356, 0.143671, 0.914856, -1.0, -0.377356, 0.143671, 0.914856, -1.0, 0.951056, -3.74403e-09, 0.309017, -1.0, 0.951056, -3.74403e-09, 0.309017, -1.0, 0.951056, -3.74403e-09, 0.309017, -1.0, 0.951056, 0.0, 0.309017, -1.0, 0.951056, 0.0, 0.309017, -1.0, 0.951056, 0.0, 0.309017, -1.0, 0.986689, -0.143666, 0.0761852, -1.0, 0.986689, -0.143666, 0.0761852, -1.0, 0.986689, -0.143666, 0.0761852, -1.0, 0.587783, -3.74398e-09, -0.809018, -1.0, 0.587783, -3.74398e-09, -0.809018, -1.0, 0.587783, -3.74398e-09, -0.809018, -1.0, 0.587783, -5.59077e-09, -0.809018, -1.0, 0.587783, -5.59077e-09, -0.809019, -1.0, 0.587783, -5.59077e-09, -0.809018, -1.0, 0.377356, -0.143671, -0.914856, -1.0, 0.377356, -0.143671, -0.914856, -1.0, 0.377356, -0.143671, -0.914856, -1.0, -0.587783, 5.59077e-09, -0.809018, -1.0, -0.587783, 5.59077e-09, -0.809019, -1.0, -0.587783, 5.59077e-09, -0.809018, -1.0, -0.753475, -0.143662, -0.64159, -1.0, -0.753474, -0.143662, -0.64159, -1.0, -0.753474, -0.143662, -0.64159, -1.0, -0.951056, 3.74403e-09, 0.309017, -1.0, -0.951056, 3.74403e-09, 0.309017, -1.0, -0.951056, 3.74403e-09, 0.309017, -1.0, -0.951056, 0.0, 0.309017, -1.0, -0.951056, 0.0, 0.309017, -1.0, -0.951056, 0.0, 0.309017, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.232451, -0.143664, 0.961939, -1.0, 0.232451, -0.143664, 0.961939, -1.0, 0.232451, -0.143664, 0.961939, -1.0, 0.843023, 0.143666, 0.518335, -1.0, 0.843023, 0.143666, 0.518335, -1.0, 0.843023, 0.143666, 0.518335, -1.0, 0.951055, 4.02674e-07, 0.309022, -1.0, 0.951055, 4.02674e-07, 0.309022, -1.0, 0.951055, 4.02674e-07, 0.309022, -1.0, 0.98669, -0.143666, 0.0761852, -1.0, 0.986689, -0.143666, 0.0761852, -1.0, 0.986689, -0.143666, 0.0761852, -1.0, 0.753475, 0.143662, -0.64159, -1.0, 0.753474, 0.143662, -0.64159, -1.0, 0.753475, 0.143662, -0.64159, -1.0, 0.587792, -4.42944e-06, -0.809012, -1.0, 0.587792, -4.42944e-06, -0.809012, -1.0, 0.587792, -4.42944e-06, -0.809012, -1.0, 0.377356, -0.143671, -0.914856, -1.0, 0.377356, -0.143671, -0.914856, -1.0, 0.377356, -0.143671, -0.914856, -1.0, -0.377356, 0.143671, -0.914856, -1.0, -0.377356, 0.143671, -0.914856, -1.0, -0.377356, 0.143671, -0.914856, -1.0, -0.587792, 4.42944e-06, -0.809012, -1.0, -0.587792, 4.42944e-06, -0.809012, -1.0, -0.587792, 4.42944e-06, -0.809012, -1.0, -0.753475, -0.143662, -0.64159, -1.0, -0.753475, -0.143662, -0.64159, -1.0, -0.753474, -0.143662, -0.64159, -1.0, 0.232451, -0.143664, 0.961939, -1.0, 0.232451, -0.143664, 0.961939, -1.0, 0.232451, -0.143664, 0.961939, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, -0.98669, 0.143666, 0.0761852, -1.0, -0.986689, 0.143666, 0.0761852, -1.0, -0.986689, 0.143666, 0.0761852, -1.0, -0.951055, -3.78991e-07, 0.309022, -1.0, -0.951055, -3.78991e-07, 0.309022, -1.0, -0.951055, -3.78991e-07, 0.309022, -1.0, -0.843023, -0.143666, 0.518335, -1.0, -0.843023, -0.143666, 0.518335, -1.0, -0.843023, -0.143666, 0.518335, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.818181, 1.0, 0.772726, 0.921269, 0.863635, 0.921269, 0.727272, 0.842539, 0.681818, 0.921269, 0.636363, 0.842539, 0.090909, 1.0, 0.0454545, 0.921269, 0.136363, 0.921269, 0.272727, 1.0, 0.227273, 0.921269, 0.318182, 0.921269, 0.454545, 1.0, 0.40909, 0.921269, 0.5, 0.921269, 0.727272, 0.842539, 0.636363, 0.842539, 0.681818, 0.763809, 0.90909, 0.842539, 0.818181, 0.842539, 0.863635, 0.763809, 0.181818, 0.842539, 0.090909, 0.842539, 0.136363, 0.763809, 0.363636, 0.842539, 0.272727, 0.842539, 0.318182, 0.763809, 0.545454, 0.842539, 0.454545, 0.842539, 0.5, 0.763809, 0.727272, 0.842539, 0.681818, 0.763809, 0.772726, 0.763809, 0.90909, 0.842539, 0.863635, 0.763809, 0.954545, 0.763809, 0.181818, 0.842539, 0.136363, 0.763809, 0.227273, 0.763809, 1.0, 0.685079, 0.909091, 0.685079, 0.954545, 0.606349, 0.272727, 0.685079, 0.181818, 0.685079, 0.227273, 0.606349, 0.454545, 0.685079, 0.363636, 0.685079, 0.40909, 0.606349, 0.636363, 0.685079, 0.545454, 0.685079, 0.590909, 0.606349, 0.590909, 0.606349, 0.5, 0.606349, 0.545454, 0.527618, 0.545454, 0.685079, 0.454545, 0.685079, 0.5, 0.606349, 0.40909, 0.606349, 0.318182, 0.606349, 0.363636, 0.527618, 0.40909, 0.606349, 0.363636, 0.685079, 0.318182, 0.606349, 0.363636, 0.685079, 0.272727, 0.685079, 0.318182, 0.606349, 0.227273, 0.606349, 0.136363, 0.606349, 0.181818, 0.527618, 0.181818, 0.685079, 0.090909, 0.685079, 0.136363, 0.606349, 0.954545, 0.606349, 0.863635, 0.606349, 0.90909, 0.527618, 0.954545, 0.606349, 0.909091, 0.685079, 0.863635, 0.606349, 0.909091, 0.685079, 0.818181, 0.685079, 0.863635, 0.606349, 0.772726, 0.606349, 0.681818, 0.606349, 0.727272, 0.527618, 0.772726, 0.606349, 0.727272, 0.685079, 0.681818, 0.606349, 0.727272, 0.685079, 0.636363, 0.685079, 0.681818, 0.606349, 0.590909, 0.763809, 0.545454, 0.685079, 0.636363, 0.685079, 0.590909, 0.763809, 0.5, 0.763809, 0.545454, 0.685079, 0.5, 0.763809, 0.454545, 0.685079, 0.545454, 0.685079, 0.40909, 0.763809, 0.363636, 0.685079, 0.454545, 0.685079, 0.40909, 0.763809, 0.318182, 0.763809, 0.363636, 0.685079, 0.318182, 0.763809, 0.272727, 0.685079, 0.363636, 0.685079, 0.227273, 0.763809, 0.181818, 0.685079, 0.272727, 0.685079, 0.227273, 0.763809, 0.136363, 0.763809, 0.181818, 0.685079, 0.136363, 0.763809, 0.090909, 0.685079, 0.181818, 0.685079, 0.954545, 0.763809, 0.909091, 0.685079, 1.0, 0.685079, 0.954545, 0.763809, 0.863635, 0.763809, 0.909091, 0.685079, 0.863635, 0.763809, 0.818181, 0.685079, 0.909091, 0.685079, 0.772726, 0.763809, 0.727272, 0.685079, 0.818181, 0.685079, 0.772726, 0.763809, 0.681818, 0.763809, 0.727272, 0.685079, 0.681818, 0.763809, 0.636363, 0.685079, 0.727272, 0.685079, 0.5, 0.763809, 0.40909, 0.763809, 0.454545, 0.685079, 0.5, 0.763809, 0.454545, 0.842539, 0.40909, 0.763809, 0.454545, 0.842539, 0.363636, 0.842539, 0.40909, 0.763809, 0.318182, 0.763809, 0.227273, 0.763809, 0.272727, 0.685079, 0.318182, 0.763809, 0.272727, 0.842539, 0.227273, 0.763809, 0.272727, 0.842539, 0.181818, 0.842539, 0.227273, 0.763809, 0.136363, 0.763809, 0.090909, 0.842539, 0.0454545, 0.763809, 0.090909, 0.842539, 0.0, 0.842539, 0.0454545, 0.763809, 0.863635, 0.763809, 0.772726, 0.763809, 0.818181, 0.685079, 0.863635, 0.763809, 0.818181, 0.842539, 0.772726, 0.763809, 0.681818, 0.763809, 0.590909, 0.763809, 0.636363, 0.685079, 0.681818, 0.763809, 0.636363, 0.842539, 0.590909, 0.763809, 0.636363, 0.842539, 0.545454, 0.842539, 0.590909, 0.763809, 0.5, 0.921269, 0.454545, 0.842539, 0.545454, 0.842539, 0.5, 0.921269, 0.40909, 0.921269, 0.454545, 0.842539, 0.40909, 0.921269, 0.363636, 0.842539, 0.454545, 0.842539, 0.318182, 0.921269, 0.272727, 0.842539, 0.363636, 0.842539, 0.318182, 0.921269, 0.227273, 0.921269, 0.272727, 0.842539, 0.227273, 0.921269, 0.181818, 0.842539, 0.272727, 0.842539, 0.136363, 0.921269, 0.090909, 0.842539, 0.181818, 0.842539, 0.136363, 0.921269, 0.0454545, 0.921269, 0.090909, 0.842539, 0.0454545, 0.921269, 0.0, 0.842539, 0.090909, 0.842539, 0.636363, 0.842539, 0.590909, 0.921269, 0.545454, 0.842539, 0.636363, 0.842539, 0.681818, 0.921269, 0.590909, 0.921269, 0.681818, 0.921269, 0.636363, 1.0, 0.590909, 0.921269, 0.863635, 0.921269, 0.818181, 0.842539, 0.90909, 0.842539, 0.863635, 0.921269, 0.772726, 0.921269, 0.818181, 0.842539, 0.772726, 0.921269, 0.727272, 0.842539, 0.818181, 0.842539),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 56, 55, 57, 59, 58, 60, 62, 61, 63, 65, 64, 66, 68, 67, 69, 71, 70, 72, 74, 73, 75, 77, 76, 78, 80, 79, 81, 83, 82, 84, 86, 85, 87, 89, 88, 90, 92, 91, 93, 95, 94, 96, 98, 97, 99, 101, 100, 102, 104, 103, 105, 107, 106, 108, 110, 109, 111, 113, 112, 114, 116, 115, 117, 119, 118, 120, 122, 121, 123, 125, 124, 126, 128, 127, 129, 131, 130, 132, 134, 133, 135, 137, 136, 138, 140, 139, 141, 143, 142, 144, 146, 145, 147, 149, 148, 150, 152, 151, 153, 155, 154, 156, 158, 157, 159, 161, 160, 162, 164, 163, 165, 167, 166, 168, 170, 169, 171, 173, 172, 174, 176, 175, 177, 179, 178, 180, 182, 181, 183, 185, 184, 186, 188, 187, 189, 191, 190, 192, 194, 193, 195, 197, 196, 198, 200, 199, 201, 203, 202, 204, 206, 205, 207, 209, 208, 210, 212, 211, 213, 215, 214, 216, 218, 217)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.276388, -0.44722, -0.850649, -0.587786, 0.0, -0.809017, 0.0, 0.0, -1.0, 0.723607, -0.44722, -0.525725, 0.587786, 0.0, -0.809017, 0.951058, 0.0, -0.309013, 0.276388, 0.44722, 0.850649, 0.688189, 0.525736, 0.499997, 0.162456, 0.850654, 0.499995, 0.52573, 0.850652, 0.0, 0.688189, 0.525736, -0.499997, 0.162456, 0.850654, -0.499995, -0.425323, 0.850654, -0.309011, -0.850648, 0.525736, 0.0, -0.425323, 0.850654, 0.309011, -0.951058, 0.0, 0.309013, -0.587786, 0.0, 0.809017, -0.723607, 0.44722, 0.525725, 0.262869, -0.525738, 0.809012, 0.723607, -0.44722, 0.525725, 0.587786, 0.0, 0.809017),
		Vector3Array(-0.306569, -0.125629, -0.943522, -0.306569, -0.125629, -0.943522, -0.306569, -0.125629, -0.943522, 0.802609, -0.125627, -0.583126, 0.802609, -0.125627, -0.583126, 0.802609, -0.125627, -0.583126, 0.408946, 0.661698, 0.628425, 0.408946, 0.661698, 0.628425, 0.408946, 0.661698, 0.628425, 0.491119, 0.794657, -0.356821, 0.491119, 0.794657, -0.356821, 0.491119, 0.794657, -0.356821, -0.60706, 0.794656, 0.0, -0.60706, 0.794656, 0.0, -0.60706, 0.794656, 0.0, -0.802609, 0.125627, 0.583126, -0.802609, 0.125627, 0.583126, -0.802609, 0.125627, 0.583126, 0.534576, -0.330387, 0.777865, 0.534576, -0.330387, 0.777865, 0.534576, -0.330387, 0.777865),
		FloatArray(0.951056, -3.74403e-09, -0.309017, -1.0, 0.951056, -3.74403e-09, -0.309017, -1.0, 0.951056, -3.74403e-09, -0.309017, -1.0, 0.587783, -3.74399e-09, 0.809018, -1.0, 0.587783, -3.74399e-09, 0.809018, -1.0, 0.587783, -3.74399e-09, 0.809018, -1.0, -0.753474, -0.143662, 0.64159, -1.0, -0.753474, -0.143662, 0.64159, -1.0, -0.753475, -0.143662, 0.64159, -1.0, 0.587792, -4.32285e-06, 0.809012, -1.0, 0.587792, -4.32285e-06, 0.809012, -1.0, 0.587792, -4.32285e-06, 0.809012, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -0.587783, 3.74399e-09, -0.809018, -1.0, -0.587783, 3.74399e-09, -0.809018, -1.0, -0.587783, 3.74399e-09, -0.809018, -1.0, -0.843023, -0.143666, 0.518335, -1.0, -0.843023, -0.143666, 0.518335, -1.0, -0.843023, -0.143666, 0.518335, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.363636, 0.842539, 0.318182, 0.763809, 0.40909, 0.763809, 0.545454, 0.842539, 0.5, 0.763809, 0.590909, 0.763809, 0.818181, 0.685079, 0.727272, 0.685079, 0.772726, 0.606349, 0.590909, 0.606349, 0.545454, 0.685079, 0.5, 0.606349, 0.227273, 0.606349, 0.181818, 0.685079, 0.136363, 0.606349, 0.136363, 0.763809, 0.0454545, 0.763809, 0.090909, 0.685079, 0.818181, 0.842539, 0.727272, 0.842539, 0.772726, 0.763809),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19)
	],
	"morph_arrays":[]
}

[sub_resource id=6 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.6382719874382019, 0.5449993014335632,
		0.35043784976005554, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.5);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=7 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(6)

[sub_resource id=8 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.5);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=9 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(8)

[sub_resource id=10 type="ArrayMesh"]

resource_name = "Cube003"
surfaces/0 = {
	"material":SubResource(7),
	"primitive":4,
	"arrays":[
		Vector3Array(-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0),
		Vector3Array(-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0),
		FloatArray(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.375, 1.0, 0.625, 1.0, 0.625, 0.75, 0.375, 0.75, 0.375, 0.75, 0.625, 0.75, 0.625, 0.5, 0.375, 0.5, 0.375, 0.25, 0.625, 0.25, 0.625, 0.0, 0.375, 0.0, 0.125, 0.5, 0.375, 0.5, 0.375, 0.25, 0.125, 0.25, 0.625, 0.5, 0.875, 0.5, 0.875, 0.25, 0.625, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 0, 3, 2, 4, 6, 5, 4, 7, 6, 8, 10, 9, 8, 11, 10, 12, 14, 13, 12, 15, 14, 16, 18, 17, 16, 19, 18)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(9),
	"primitive":4,
	"arrays":[
		Vector3Array(1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0),
		Vector3Array(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0),
		FloatArray(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.375, 0.5, 0.625, 0.5, 0.625, 0.25, 0.375, 0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 0, 3, 2)
	],
	"morph_arrays":[]
}

[sub_resource id=11 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.0, 0.05709923058748245, 0.8000000715255737,
		1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.5);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=12 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(11)

[sub_resource id=13 type="ArrayMesh"]

resource_name = "Cube004"
surfaces/0 = {
	"material":SubResource(12),
	"primitive":4,
	"arrays":[
		Vector3Array(-1.0, 0.75, -0.75, -1.0, 1.0, -0.75, -1.0, 1.0, -1.0, -1.0, 0.75, -1.0, 0.75, 0.75, -1.0, 0.75, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 0.75, -1.0, 1.0, 0.75, 0.75, 1.0, 1.0, 0.75, 1.0, 1.0, 1.0, 1.0, 0.75, 1.0, -0.75, 0.75, 1.0, -0.75, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.75, 1.0, 0.75, -1.0, 0.75, 1.0, -1.0, 0.75, 1.0, -1.0, 1.0, 0.75, -1.0, 1.0, -0.75, 1.0, 0.75, -1.0, 1.0, 0.75, -1.0, 1.0, 1.0, -0.75, 1.0, 1.0, 0.25, 1.0, 0.75, 0.0, 1.0, 0.75, 0.0, 1.0, 1.0, 0.25, 1.0, 1.0, 0.25, 1.0, -0.25, 0.0, 1.0, -0.25, 0.0, 1.0, 0.0, 0.25, 1.0, 0.0, -0.75, 1.0, -0.25, -1.0, 1.0, -0.25, -1.0, 1.0, 0.0, -0.75, 1.0, 0.0, -0.25, -1.0, 0.75, 0.0, -1.0, 0.75, 0.0, -1.0, 1.0, -0.25, -1.0, 1.0, -0.25, -1.0, -0.25, 0.0, -1.0, -0.25, 0.0, -1.0, 0.0, -0.25, -1.0, 0.0, 0.75, -1.0, -0.25, 1.0, -1.0, -0.25, 1.0, -1.0, 0.0, 0.75, -1.0, 0.0, -0.75, -0.25, 1.0, -0.75, 0.0, 1.0, -1.0, 0.0, 1.0, -1.0, -0.25, 1.0, 0.25, -0.25, 1.0, 0.25, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -0.25, 1.0, 0.25, 0.75, 1.0, 0.25, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.75, 1.0, 1.0, -0.25, 0.75, 1.0, 0.0, 0.75, 1.0, 0.0, 1.0, 1.0, -0.25, 1.0, 1.0, -0.25, -0.25, 1.0, 0.0, -0.25, 1.0, 0.0, 0.0, 1.0, -0.25, 0.0, 1.0, 0.75, -0.25, 1.0, 1.0, -0.25, 1.0, 1.0, 0.0, 1.0, 0.75, 0.0, 0.75, -0.25, -1.0, 0.75, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -0.25, -1.0, -0.25, -0.25, -1.0, -0.25, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -0.25, -1.0, -0.25, 0.75, -1.0, -0.25, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 0.75, -1.0, -1.0, -0.25, -0.75, -1.0, 0.0, -0.75, -1.0, 0.0, -1.0, -1.0, -0.25, -1.0, -1.0, -0.25, 0.25, -1.0, 0.0, 0.25, -1.0, 0.0, 0.0, -1.0, -0.25, 0.0, -1.0, 0.75, 0.25, -1.0, 1.0, 0.25, -1.0, 1.0, 0.0, -1.0, 0.75, 0.0, -1.0, 0.25, 0.25, -1.0, 0.5, 0.25, -1.0, 0.5, 0.0, -1.0, 0.25, 0.0, -1.0, 0.25, 0.75, -1.0, 0.5, 0.75, -1.0, 0.5, 0.5, -1.0, 0.25, 0.5, -1.0, 0.75, 0.75, -1.0, 1.0, 0.75, -1.0, 1.0, 0.5, -1.0, 0.75, 0.5, -1.0, -0.75, 0.25, -1.0, -0.5, 0.25, -1.0, -0.5, 0.0, -1.0, -0.75, 0.0, -1.0, -0.75, 0.75, -1.0, -0.5, 0.75, -1.0, -0.5, 0.5, -1.0, -0.75, 0.5, -1.0, -0.25, 0.75, -1.0, 0.0, 0.75, -1.0, 0.0, 0.5, -1.0, -0.25, 0.5, -1.0, -0.75, -0.75, -1.0, -0.5, -0.75, -1.0, -0.5, -1.0, -1.0, -0.75, -1.0, -1.0, -0.75, -0.25, -1.0, -0.5, -0.25, -1.0, -0.5, -0.5, -1.0, -0.75, -0.5, -1.0, -0.25, -0.25, -1.0, 0.0, -0.25, -1.0, 0.0, -0.5, -1.0, -0.25, -0.5, -0.25, 0.5, -1.0, 0.0, 0.5, -1.0, 0.0, 0.5, -2.51677, -0.25, 0.5, -2.51677, -0.75, 0.25, -1.0, -0.75, 0.5, -1.0, -0.5, 0.5, -1.0, -0.5, 0.25, -1.0, -0.75, 0.75, -1.0, -0.75, 1.0, -1.0, -0.5, 1.0, -1.0, -0.5, 0.75, -1.0, -0.25, -0.75, -1.0, -0.25, -0.5, -1.0, 0.0, -0.5, -1.0, 0.0, -0.75, -1.0, -0.75, -0.75, -1.0, -0.75, -0.5, -1.0, -0.5, -0.5, -1.0, -0.5, -0.75, -1.0, -0.75, -0.25, -1.0, -0.75, 0.0, -1.0, -0.5, 0.0, -1.0, -0.5, -0.25, -1.0, 0.75, -0.75, -1.0, 0.75, -0.5, -1.0, 1.0, -0.5, -1.0, 1.0, -0.75, -1.0, 0.25, -0.75, -1.0, 0.25, -0.5, -1.0, 0.5, -0.5, -1.0, 0.5, -0.75, -1.0, 0.25, -0.25, -1.0, 0.25, 0.0, -1.0, 0.5, 0.0, -1.0, 0.5, -0.25, -1.0, 1.0, 0.25, -0.25, 1.0, 0.5, -0.25, 1.0, 0.5, 0.0, 1.0, 0.25, 0.0, 1.0, 0.25, -0.75, 1.0, 0.5, -0.75, 1.0, 0.5, -0.5, 1.0, 0.25, -0.5, 1.0, 0.75, -0.75, 1.0, 1.0, -0.75, 1.0, 1.0, -0.5, 1.0, 0.75, -0.5, 1.0, -0.75, -0.25, 1.0, -0.5, -0.25, 1.0, -0.5, 0.0, 1.0, -0.75, 0.0, 1.0, -0.75, -0.75, 1.0, -0.5, -0.75, 1.0, -0.5, -0.5, 1.0, -0.75, -0.5, 1.0, -0.25, -0.75, 1.0, 0.0, -0.75, 1.0, 0.0, -0.5, 1.0, -0.25, -0.5, 1.0, -0.75, 0.75, 1.0, -0.5, 0.75, 1.0, -0.5, 1.0, 1.0, -0.75, 1.0, 1.0, -0.75, 0.25, 1.0, -0.5, 0.25, 1.0, -0.5, 0.5, 1.0, -0.75, 0.5, 1.0, -0.25, 0.25, 1.0, 0.0, 0.25, 1.0, 0.0, 0.5, 1.0, -0.25, 0.5, 0.25, 0.25, 1.0, 0.25, 0.5, 1.0, 0.0, 0.5, 1.0, 0.0, 0.25, 1.0, 0.75, 0.25, 1.0, 0.75, 0.5, 1.0, 0.5, 0.5, 1.0, 0.5, 0.25, 1.0, 0.75, 0.75, 1.0, 0.75, 1.0, 1.0, 0.5, 1.0, 1.0, 0.5, 0.75, 1.0, 0.25, -0.75, 1.0, 0.25, -0.5, 1.0, 0.0, -0.5, 1.0, 0.0, -0.75, 1.0, 0.75, -0.75, 1.0, 0.75, -0.5, 1.0, 0.5, -0.5, 1.0, 0.5, -0.75, 1.0, 0.75, -0.25, 1.0, 0.75, 0.0, 1.0, 0.5, 0.0, 1.0, 0.5, -0.25, 1.0, -0.75, -0.75, 1.0, -0.75, -0.5, 1.0, -1.0, -0.5, 1.0, -1.0, -0.75, 1.0, -0.25, -0.75, 1.0, -0.25, -0.5, 1.0, -0.5, -0.5, 1.0, -0.5, -0.75, 1.0, -0.25, -0.25, 1.0, -0.25, 0.0, 1.0, -0.5, 0.0, 1.0, -0.5, -0.25, 1.0, 0.25, -1.0, -0.25, 0.5, -1.0, -0.25, 0.5, -1.0, 0.0, 0.25, -1.0, 0.0, 0.25, -1.0, -0.75, 0.5, -1.0, -0.75, 0.5, -1.0, -0.5, 0.25, -1.0, -0.5, 0.75, -1.0, -0.75, 1.0, -1.0, -0.75, 1.0, -1.0, -0.5, 0.75, -1.0, -0.5, -0.75, -1.0, -0.25, -0.5, -1.0, -0.25, -0.5, -1.0, 0.0, -0.75, -1.0, 0.0, -0.75, -1.0, -0.75, -0.5, -1.0, -0.75, -0.5, -1.0, -0.5, -0.75, -1.0, -0.5, -0.25, -1.0, -0.75, 0.0, -1.0, -0.75, 0.0, -1.0, -0.5, -0.25, -1.0, -0.5, -0.75, -1.0, 0.75, -0.5, -1.0, 0.75, -0.5, -1.0, 1.0, -0.75, -1.0, 1.0, -0.75, -1.0, 0.25, -0.5, -1.0, 0.25, -0.5, -1.0, 0.5, -0.75, -1.0, 0.5, 0.5, -1.0, -0.25, 0.25, -1.0, -0.25, 0.25, -2.96911, -0.25, 0.5, -2.96911, -0.25, -0.25, 1.0, -0.25, -0.5, 1.0, -0.25, -0.5, 1.0, 0.0, -0.25, 1.0, 0.0, -0.25, 1.0, -0.75, -0.5, 1.0, -0.75, -0.5, 1.0, -0.5, -0.25, 1.0, -0.5, -0.75, 1.0, -0.75, -1.0, 1.0, -0.75, -1.0, 1.0, -0.5, -0.75, 1.0, -0.5, 0.75, 1.0, -0.25, 0.5, 1.0, -0.25, 0.5, 1.0, 0.0, 0.75, 1.0, 0.0, 0.75, 1.0, -0.75, 0.5, 1.0, -0.75, 0.5, 1.0, -0.5, 0.75, 1.0, -0.5, 0.25, 1.0, -0.75, 0.0, 1.0, -0.75, 0.0, 1.0, -0.5, 0.25, 1.0, -0.5, 0.75, 1.0, 0.75, 0.5, 1.0, 0.75, 0.5, 1.0, 1.0, 0.75, 1.0, 1.0, 0.75, 1.0, 0.25, 0.5, 1.0, 0.25, 0.5, 1.0, 0.5, 0.75, 1.0, 0.5, 0.25, 1.0, 0.25, 0.0, 1.0, 0.25, 0.0, 1.0, 0.5, 0.25, 1.0, 0.5, -0.25, 1.0, 0.75, -0.5, 1.0, 0.75, -0.5, 1.0, 1.0, -0.25, 1.0, 1.0, -0.25, 1.0, 0.25, -0.5, 1.0, 0.25, -0.5, 1.0, 0.5, -0.25, 1.0, 0.5, -0.75, 1.0, 0.25, -1.0, 1.0, 0.25, -1.0, 1.0, 0.5, -0.75, 1.0, 0.5, 0.25, -1.0, 0.75, 0.5, -1.0, 0.75, 0.5, -1.0, 1.0, 0.25, -1.0, 1.0, 0.25, -1.0, 0.25, 0.5, -1.0, 0.25, 0.5, -1.0, 0.5, 0.25, -1.0, 0.5, 0.75, -1.0, 0.25, 1.0, -1.0, 0.25, 1.0, -1.0, 0.5, 0.75, -1.0, 0.5, -0.75, 0.25, 1.0, -0.75, 0.5, 1.0, -1.0, 0.5, 1.0, -1.0, 0.25, 1.0, -0.25, 0.25, 1.0, -0.25, 0.5, 1.0, -0.25, 0.5, 3.39161, -0.25, 0.25, 3.39161, -0.25, 0.75, 1.0, -0.25, 1.0, 1.0, -0.5, 1.0, 1.0, -0.5, 0.75, 1.0, 1.0, 0.25, 0.75, 1.0, 0.5, 0.75, 1.0, 0.5, 1.0, 1.0, 0.25, 1.0, 1.0, 0.25, 0.25, 1.0, 0.5, 0.25, 1.0, 0.5, 0.5, 1.0, 0.25, 0.5, 1.0, 0.75, 0.25, 1.0, 1.0, 0.25, 1.0, 1.0, 0.5, 1.0, 0.75, 0.5, 0.75, 0.25, -1.0, 0.75, 0.5, -1.0, 1.0, 0.5, -1.0, 1.0, 0.25, -1.0, 0.25, 0.25, -1.0, 0.25, 0.5, -1.0, 0.5, 0.5, -1.0, 0.5, 0.25, -1.0, 0.25, 0.75, -1.0, 0.25, 1.0, -1.0, 0.5, 1.0, -1.0, 0.5, 0.75, -1.0, -1.0, 0.25, -0.75, -1.0, 0.5, -0.75, -1.0, 0.5, -1.0, -1.0, 0.25, -1.0, -1.0, 0.25, -0.25, -1.0, 0.5, -0.25, -1.0, 0.5, -0.5, -1.0, 0.25, -0.5, -1.0, 0.75, -0.25, -1.0, 1.0, -0.25, -1.0, 1.0, -0.5, -1.0, 0.75, -0.5, 0.0, 0.5, -1.0, 0.0, 0.25, -1.0, -0.25, 0.5, 1.0, -0.5, 0.5, 1.0, -0.25, 0.25, 1.0, -0.5, 0.25, 1.0, 0.0, -1.0, 0.25, 0.0, -1.0, 0.5, 1.0, 1.0, 0.25, 1.0, 1.0, 0.5, 1.0, 1.0, 0.0, 1.0, 1.0, 0.75, 1.0, 1.0, 1.0, 0.5, 1.0, -1.0, 0.25, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, 1.0, -0.75, 1.0, 1.0, -0.5, 1.0, 1.0, -1.0, 0.75, 1.0, -1.0, 1.0, 1.0, -0.25, -0.5, 1.0, -1.0, -0.75, 1.0, -1.0, -1.0, 1.0, -1.0, -0.25, 1.0, -1.0, -0.25, -1.0, 0.25, -0.25, -1.0, 0.5, -1.0, -1.0, 0.25, -1.0, -1.0, 0.5, -1.0, -1.0, 0.0, -1.0, -1.0, 0.75, -1.0, -1.0, 1.0, -0.5, -1.0, -1.0, -0.25, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -0.75, -1.0, -1.0, -0.5, -1.0, -1.0, -1.0, -0.75, -1.0, -1.0, -1.0, -1.0, -0.25, 0.5, -1.0, -1.0, 0.75, -1.0, -1.0, 1.0, -1.0, -1.0, 0.25, -1.0, -1.0, -0.25, -1.0, 0.25, 0.0, -1.0, 0.25, 0.0, -2.96911, 0.25, -0.25, -2.96911, 0.25, -0.25, -1.0, 1.0, -0.5, -1.0, 1.0, 0.0, -1.0, 1.0, -0.75, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -0.5, 1.0, 1.0, -0.25, 1.0, 1.0, 0.0, 1.0, 0.75, -1.0, 1.0, 0.5, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -0.75, 1.0, 0.25, -1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 0.75, 1.0, 1.0, 1.0, 1.0, 1.0, 0.25, 1.0, 1.0, -1.0, 0.25, 1.0, -1.0, 0.5, 1.0, -1.0, 0.0, 1.0, -1.0, 0.75, 1.0, -1.0, 1.0, 1.0, -0.5, -1.0, 1.0, -0.25, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0, -0.75, 1.0, -1.0, -0.5, 1.0, -1.0, -1.0, 1.0, -0.75, -1.0, 1.0, -1.0, -0.25, 1.0, 0.5, -1.0, 1.0, 0.75, -1.0, 1.0, 1.0, -1.0, 1.0, 0.25, -1.0, 0.25, -1.0, -1.0, 0.5, -1.0, -1.0, 0.0, -1.0, -1.0, 0.75, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -0.5, -1.0, -1.0, -0.25, -1.0, -1.0, 0.0, -1.0, -0.75, -1.0, -1.0, -0.5, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.75, -1.0, -0.25, -1.0, -1.0, -1.0, 0.5, -1.0, -1.0, 0.75, -1.0, -1.0, 1.0, -1.0, -1.0, 0.25, -1.0, -0.25, 0.25, -1.0, -0.25, 0.5, -1.0, -1.0, -1.0, -0.25, -1.0, -1.0, -0.5, -1.0, -1.0, 0.0, -1.0, -1.0, -0.75, -1.0, -1.0, -1.0, -1.0, -0.5, 1.0, -1.0, -0.25, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, 0.75, -1.0, -1.0, 0.5, -1.0, -1.0, 1.0, -1.0, -0.75, 1.0, -1.0, -1.0, 0.25, -1.0, 0.5, 1.0, -1.0, 0.75, 1.0, -1.0, 1.0, 1.0, -1.0, 0.25, 1.0, -0.25, 0.25, -2.51677, -0.25, 0.5, -2.51677, 0.0, 0.5, -2.51677, 0.0, 0.25, -2.51677, 0.0, 0.25, -1.0, -0.25, 0.25, -1.0, -0.25, 0.25, -2.51677, 0.0, 0.25, -2.51677, -0.25, 0.25, -1.0, -0.25, 0.5, -1.0, -0.25, 0.5, -2.51677, -0.25, 0.25, -2.51677, 0.0, 0.5, -1.0, 0.0, 0.25, -1.0, 0.0, 0.25, -2.51677, 0.0, 0.5, -2.51677, -0.25, 0.25, 3.39161, -0.25, 0.5, 3.39161, -0.5, 0.5, 3.39161, -0.5, 0.25, 3.39161, -0.5, 0.5, 1.0, -0.5, 0.25, 1.0, -0.5, 0.25, 3.39161, -0.5, 0.5, 3.39161, -0.25, 0.5, 1.0, -0.5, 0.5, 1.0, -0.5, 0.5, 3.39161, -0.25, 0.5, 3.39161, -0.5, 0.25, 1.0, -0.25, 0.25, 1.0, -0.25, 0.25, 3.39161, -0.5, 0.25, 3.39161, -0.25, -2.96911, 0.25, 0.0, -2.96911, 0.25, 0.0, -2.96911, 0.5, -0.25, -2.96911, 0.5, 0.25, -2.96911, -0.5, 0.5, -2.96911, -0.5, 0.5, -2.96911, -0.25, 0.25, -2.96911, -0.25, 0.0, -1.0, 0.25, 0.0, -1.0, 0.5, 0.0, -2.96911, 0.5, 0.0, -2.96911, 0.25, 0.25, -1.0, -0.25, 0.25, -1.0, -0.5, 0.25, -2.96911, -0.5, 0.25, -2.96911, -0.25, -0.25, -1.0, 0.5, -0.25, -1.0, 0.25, -0.25, -2.96911, 0.25, -0.25, -2.96911, 0.5, 0.25, -1.0, -0.5, 0.5, -1.0, -0.5, 0.5, -2.96911, -0.5, 0.25, -2.96911, -0.5, 0.5, -1.0, -0.5, 0.5, -1.0, -0.25, 0.5, -2.96911, -0.25, 0.5, -2.96911, -0.5, 0.0, -1.0, 0.5, -0.25, -1.0, 0.5, -0.25, -2.96911, 0.5, 0.0, -2.96911, 0.5),
		Vector3Array(-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0),
		FloatArray(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.59375, 0.78125, 0.625, 0.78125, 0.625, 0.75, 0.59375, 0.75, 0.59375, 0.53125, 0.625, 0.53125, 0.625, 0.5, 0.59375, 0.5, 0.59375, 0.28125, 0.625, 0.28125, 0.625, 0.25, 0.59375, 0.25, 0.59375, 0.03125, 0.625, 0.03125, 0.625, 0.0, 0.59375, 0.0, 0.34375, 0.28125, 0.375, 0.28125, 0.375, 0.25, 0.34375, 0.25, 0.84375, 0.28125, 0.875, 0.28125, 0.875, 0.25, 0.84375, 0.25, 0.71875, 0.28125, 0.75, 0.28125, 0.75, 0.25, 0.71875, 0.25, 0.71875, 0.40625, 0.75, 0.40625, 0.75, 0.375, 0.71875, 0.375, 0.84375, 0.40625, 0.875, 0.40625, 0.875, 0.375, 0.84375, 0.375, 0.21875, 0.28125, 0.25, 0.28125, 0.25, 0.25, 0.21875, 0.25, 0.21875, 0.40625, 0.25, 0.40625, 0.25, 0.375, 0.21875, 0.375, 0.34375, 0.40625, 0.375, 0.40625, 0.375, 0.375, 0.34375, 0.375, 0.46875, 0.03125, 0.5, 0.03125, 0.5, 0.0, 0.46875, 0.0, 0.46875, 0.15625, 0.5, 0.15625, 0.5, 0.125, 0.46875, 0.125, 0.59375, 0.15625, 0.625, 0.15625, 0.625, 0.125, 0.59375, 0.125, 0.46875, 0.28125, 0.5, 0.28125, 0.5, 0.25, 0.46875, 0.25, 0.46875, 0.40625, 0.5, 0.40625, 0.5, 0.375, 0.46875, 0.375, 0.59375, 0.40625, 0.625, 0.40625, 0.625, 0.375, 0.59375, 0.375, 0.46875, 0.53125, 0.5, 0.53125, 0.5, 0.5, 0.46875, 0.5, 0.46875, 0.65625, 0.5, 0.65625, 0.5, 0.625, 0.46875, 0.625, 0.59375, 0.65625, 0.625, 0.65625, 0.625, 0.625, 0.59375, 0.625, 0.46875, 0.78125, 0.5, 0.78125, 0.5, 0.75, 0.46875, 0.75, 0.46875, 0.90625, 0.5, 0.90625, 0.5, 0.875, 0.46875, 0.875, 0.59375, 0.90625, 0.625, 0.90625, 0.625, 0.875, 0.59375, 0.875, 0.53125, 0.90625, 0.5625, 0.90625, 0.5625, 0.875, 0.53125, 0.875, 0.53125, 0.96875, 0.5625, 0.96875, 0.5625, 0.9375, 0.53125, 0.9375, 0.59375, 0.96875, 0.625, 0.96875, 0.625, 0.9375, 0.59375, 0.9375, 0.40625, 0.90625, 0.4375, 0.90625, 0.4375, 0.875, 0.40625, 0.875, 0.40625, 0.96875, 0.4375, 0.96875, 0.4375, 0.9375, 0.40625, 0.9375, 0.46875, 0.96875, 0.5, 0.96875, 0.5, 0.9375, 0.46875, 0.9375, 0.40625, 0.78125, 0.4375, 0.78125, 0.4375, 0.75, 0.40625, 0.75, 0.40625, 0.84375, 0.4375, 0.84375, 0.4375, 0.8125, 0.40625, 0.8125, 0.46875, 0.84375, 0.5, 0.84375, 0.5, 0.8125, 0.46875, 0.8125, 0.5625, 0.65625, 0.5625, 0.625, 0.5625, 0.625, 0.5625, 0.65625, 0.53125, 0.71875, 0.5625, 0.71875, 0.5625, 0.6875, 0.53125, 0.6875, 0.59375, 0.71875, 0.625, 0.71875, 0.625, 0.6875, 0.59375, 0.6875, 0.40625, 0.65625, 0.4375, 0.65625, 0.4375, 0.625, 0.40625, 0.625, 0.40625, 0.71875, 0.4375, 0.71875, 0.4375, 0.6875, 0.40625, 0.6875, 0.46875, 0.71875, 0.5, 0.71875, 0.5, 0.6875, 0.46875, 0.6875, 0.40625, 0.53125, 0.4375, 0.53125, 0.4375, 0.5, 0.40625, 0.5, 0.40625, 0.59375, 0.4375, 0.59375, 0.4375, 0.5625, 0.40625, 0.5625, 0.46875, 0.59375, 0.5, 0.59375, 0.5, 0.5625, 0.46875, 0.5625, 0.53125, 0.40625, 0.5625, 0.40625, 0.5625, 0.375, 0.53125, 0.375, 0.53125, 0.46875, 0.5625, 0.46875, 0.5625, 0.4375, 0.53125, 0.4375, 0.59375, 0.46875, 0.625, 0.46875, 0.625, 0.4375, 0.59375, 0.4375, 0.40625, 0.40625, 0.4375, 0.40625, 0.4375, 0.375, 0.40625, 0.375, 0.40625, 0.46875, 0.4375, 0.46875, 0.4375, 0.4375, 0.40625, 0.4375, 0.46875, 0.46875, 0.5, 0.46875, 0.5, 0.4375, 0.46875, 0.4375, 0.40625, 0.28125, 0.4375, 0.28125, 0.4375, 0.25, 0.40625, 0.25, 0.40625, 0.34375, 0.4375, 0.34375, 0.4375, 0.3125, 0.40625, 0.3125, 0.46875, 0.34375, 0.5, 0.34375, 0.5, 0.3125, 0.46875, 0.3125, 0.53125, 0.15625, 0.5625, 0.15625, 0.5625, 0.125, 0.53125, 0.125, 0.53125, 0.21875, 0.5625, 0.21875, 0.5625, 0.1875, 0.53125, 0.1875, 0.59375, 0.21875, 0.625, 0.21875, 0.625, 0.1875, 0.59375, 0.1875, 0.40625, 0.15625, 0.4375, 0.15625, 0.4375, 0.125, 0.40625, 0.125, 0.40625, 0.21875, 0.4375, 0.21875, 0.4375, 0.1875, 0.40625, 0.1875, 0.46875, 0.21875, 0.5, 0.21875, 0.5, 0.1875, 0.46875, 0.1875, 0.40625, 0.03125, 0.4375, 0.03125, 0.4375, 0.0, 0.40625, 0.0, 0.40625, 0.09375, 0.4375, 0.09375, 0.4375, 0.0625, 0.40625, 0.0625, 0.46875, 0.09375, 0.5, 0.09375, 0.5, 0.0625, 0.46875, 0.0625, 0.28125, 0.40625, 0.3125, 0.40625, 0.3125, 0.375, 0.28125, 0.375, 0.28125, 0.46875, 0.3125, 0.46875, 0.3125, 0.4375, 0.28125, 0.4375, 0.34375, 0.46875, 0.375, 0.46875, 0.375, 0.4375, 0.34375, 0.4375, 0.15625, 0.40625, 0.1875, 0.40625, 0.1875, 0.375, 0.15625, 0.375, 0.15625, 0.46875, 0.1875, 0.46875, 0.1875, 0.4375, 0.15625, 0.4375, 0.21875, 0.46875, 0.25, 0.46875, 0.25, 0.4375, 0.21875, 0.4375, 0.15625, 0.28125, 0.1875, 0.28125, 0.1875, 0.25, 0.15625, 0.25, 0.15625, 0.34375, 0.1875, 0.34375, 0.1875, 0.3125, 0.15625, 0.3125, 0.3125, 0.40625, 0.28125, 0.40625, 0.28125, 0.40625, 0.3125, 0.40625, 0.78125, 0.40625, 0.8125, 0.40625, 0.8125, 0.375, 0.78125, 0.375, 0.78125, 0.46875, 0.8125, 0.46875, 0.8125, 0.4375, 0.78125, 0.4375, 0.84375, 0.46875, 0.875, 0.46875, 0.875, 0.4375, 0.84375, 0.4375, 0.65625, 0.40625, 0.6875, 0.40625, 0.6875, 0.375, 0.65625, 0.375, 0.65625, 0.46875, 0.6875, 0.46875, 0.6875, 0.4375, 0.65625, 0.4375, 0.71875, 0.46875, 0.75, 0.46875, 0.75, 0.4375, 0.71875, 0.4375, 0.65625, 0.28125, 0.6875, 0.28125, 0.6875, 0.25, 0.65625, 0.25, 0.65625, 0.34375, 0.6875, 0.34375, 0.6875, 0.3125, 0.65625, 0.3125, 0.71875, 0.34375, 0.75, 0.34375, 0.75, 0.3125, 0.71875, 0.3125, 0.78125, 0.28125, 0.8125, 0.28125, 0.8125, 0.25, 0.78125, 0.25, 0.78125, 0.34375, 0.8125, 0.34375, 0.8125, 0.3125, 0.78125, 0.3125, 0.84375, 0.34375, 0.875, 0.34375, 0.875, 0.3125, 0.84375, 0.3125, 0.28125, 0.28125, 0.3125, 0.28125, 0.3125, 0.25, 0.28125, 0.25, 0.28125, 0.34375, 0.3125, 0.34375, 0.3125, 0.3125, 0.28125, 0.3125, 0.34375, 0.34375, 0.375, 0.34375, 0.375, 0.3125, 0.34375, 0.3125, 0.53125, 0.03125, 0.5625, 0.03125, 0.5625, 0.0, 0.53125, 0.0, 0.53125, 0.09375, 0.5625, 0.09375, 0.5625, 0.09375, 0.53125, 0.09375, 0.59375, 0.09375, 0.625, 0.09375, 0.625, 0.0625, 0.59375, 0.0625, 0.53125, 0.28125, 0.5625, 0.28125, 0.5625, 0.25, 0.53125, 0.25, 0.53125, 0.34375, 0.5625, 0.34375, 0.5625, 0.3125, 0.53125, 0.3125, 0.59375, 0.34375, 0.625, 0.34375, 0.625, 0.3125, 0.59375, 0.3125, 0.53125, 0.53125, 0.5625, 0.53125, 0.5625, 0.5, 0.53125, 0.5, 0.53125, 0.59375, 0.5625, 0.59375, 0.5625, 0.5625, 0.53125, 0.5625, 0.59375, 0.59375, 0.625, 0.59375, 0.625, 0.5625, 0.59375, 0.5625, 0.53125, 0.78125, 0.5625, 0.78125, 0.5625, 0.75, 0.53125, 0.75, 0.53125, 0.84375, 0.5625, 0.84375, 0.5625, 0.8125, 0.53125, 0.8125, 0.59375, 0.84375, 0.625, 0.84375, 0.625, 0.8125, 0.59375, 0.8125, 0.5625, 0.625, 0.53125, 0.625, 0.5625, 0.09375, 0.5625, 0.0625, 0.53125, 0.09375, 0.53125, 0.0625, 0.25, 0.34375, 0.25, 0.3125, 0.625, 0.34375, 0.625, 0.3125, 0.625, 0.375, 0.625, 0.28125, 0.625, 0.25, 0.6875, 0.5, 0.71875, 0.5, 0.75, 0.5, 0.625, 0.46875, 0.625, 0.4375, 0.625, 0.5, 0.65625, 0.5, 0.625, 0.40625, 0.8125, 0.5, 0.84375, 0.5, 0.875, 0.5, 0.78125, 0.5, 0.21875, 0.34375, 0.21875, 0.3125, 0.125, 0.34375, 0.125, 0.3125, 0.125, 0.375, 0.125, 0.28125, 0.125, 0.25, 0.1875, 0.5, 0.21875, 0.5, 0.25, 0.5, 0.125, 0.46875, 0.125, 0.4375, 0.125, 0.5, 0.15625, 0.5, 0.125, 0.40625, 0.3125, 0.5, 0.34375, 0.5, 0.375, 0.5, 0.28125, 0.5, 0.21875, 0.34375, 0.25, 0.34375, 0.25, 0.34375, 0.21875, 0.34375, 0.375, 0.09375, 0.375, 0.0625, 0.375, 0.125, 0.375, 0.03125, 0.375, 0.0, 0.4375, 0.25, 0.46875, 0.25, 0.5, 0.25, 0.375, 0.21875, 0.375, 0.1875, 0.375, 0.25, 0.40625, 0.25, 0.375, 0.15625, 0.5625, 0.25, 0.59375, 0.25, 0.625, 0.25, 0.53125, 0.25, 0.375, 0.34375, 0.375, 0.3125, 0.375, 0.375, 0.375, 0.28125, 0.375, 0.25, 0.4375, 0.5, 0.46875, 0.5, 0.5, 0.5, 0.375, 0.46875, 0.375, 0.4375, 0.375, 0.5, 0.40625, 0.5, 0.375, 0.40625, 0.5625, 0.5, 0.59375, 0.5, 0.625, 0.5, 0.53125, 0.5, 0.375, 0.59375, 0.375, 0.5625, 0.375, 0.625, 0.375, 0.53125, 0.375, 0.5, 0.4375, 0.75, 0.46875, 0.75, 0.5, 0.75, 0.375, 0.71875, 0.375, 0.6875, 0.375, 0.75, 0.40625, 0.75, 0.375, 0.65625, 0.5625, 0.75, 0.59375, 0.75, 0.625, 0.75, 0.53125, 0.75, 0.53125, 0.65625, 0.5625, 0.65625, 0.375, 0.84375, 0.375, 0.8125, 0.375, 0.875, 0.375, 0.78125, 0.375, 0.75, 0.4375, 1.0, 0.46875, 1.0, 0.5, 1.0, 0.375, 0.96875, 0.375, 0.9375, 0.375, 1.0, 0.40625, 1.0, 0.375, 0.90625, 0.5625, 1.0, 0.59375, 1.0, 0.625, 1.0, 0.53125, 1.0, 0.53125, 0.65625, 0.5625, 0.65625, 0.5625, 0.625, 0.53125, 0.625, 0.53125, 0.625, 0.53125, 0.65625, 0.53125, 0.65625, 0.53125, 0.625, 0.53125, 0.65625, 0.5625, 0.65625, 0.5625, 0.65625, 0.53125, 0.65625, 0.5625, 0.625, 0.53125, 0.625, 0.53125, 0.625, 0.5625, 0.625, 0.53125, 0.09375, 0.5625, 0.09375, 0.5625, 0.0625, 0.53125, 0.0625, 0.5625, 0.0625, 0.53125, 0.0625, 0.53125, 0.0625, 0.5625, 0.0625, 0.5625, 0.09375, 0.5625, 0.0625, 0.5625, 0.0625, 0.5625, 0.09375, 0.53125, 0.0625, 0.53125, 0.09375, 0.53125, 0.09375, 0.53125, 0.0625, 0.21875, 0.34375, 0.25, 0.34375, 0.25, 0.3125, 0.21875, 0.3125, 0.28125, 0.4375, 0.3125, 0.4375, 0.3125, 0.40625, 0.28125, 0.40625, 0.25, 0.34375, 0.25, 0.3125, 0.25, 0.3125, 0.25, 0.34375, 0.28125, 0.40625, 0.28125, 0.4375, 0.28125, 0.4375, 0.28125, 0.40625, 0.21875, 0.3125, 0.21875, 0.34375, 0.21875, 0.34375, 0.21875, 0.3125, 0.28125, 0.4375, 0.3125, 0.4375, 0.3125, 0.4375, 0.28125, 0.4375, 0.3125, 0.4375, 0.3125, 0.40625, 0.3125, 0.40625, 0.3125, 0.4375, 0.25, 0.3125, 0.21875, 0.3125, 0.21875, 0.3125, 0.25, 0.3125),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 0, 3, 2, 4, 6, 5, 4, 7, 6, 8, 10, 9, 8, 11, 10, 12, 14, 13, 12, 15, 14, 16, 18, 17, 16, 19, 18, 20, 22, 21, 20, 23, 22, 24, 26, 25, 24, 27, 26, 28, 30, 29, 28, 31, 30, 32, 34, 33, 32, 35, 34, 36, 38, 37, 36, 39, 38, 40, 42, 41, 40, 43, 42, 44, 46, 45, 44, 47, 46, 48, 50, 49, 48, 51, 50, 52, 54, 53, 52, 55, 54, 56, 58, 57, 56, 59, 58, 60, 62, 61, 60, 63, 62, 64, 66, 65, 64, 67, 66, 68, 70, 69, 68, 71, 70, 72, 74, 73, 72, 75, 74, 76, 78, 77, 76, 79, 78, 80, 82, 81, 80, 83, 82, 84, 86, 85, 84, 87, 86, 88, 90, 89, 88, 91, 90, 92, 94, 93, 92, 95, 94, 96, 98, 97, 96, 99, 98, 100, 102, 101, 100, 103, 102, 104, 106, 105, 104, 107, 106, 108, 110, 109, 108, 111, 110, 112, 114, 113, 112, 115, 114, 116, 118, 117, 116, 119, 118, 120, 122, 121, 120, 123, 122, 124, 126, 125, 124, 127, 126, 128, 130, 129, 128, 131, 130, 132, 134, 133, 132, 135, 134, 136, 138, 137, 136, 139, 138, 140, 142, 141, 140, 143, 142, 144, 146, 145, 144, 147, 146, 148, 150, 149, 148, 151, 150, 152, 154, 153, 152, 155, 154, 156, 158, 157, 156, 159, 158, 160, 162, 161, 160, 163, 162, 164, 166, 165, 164, 167, 166, 168, 170, 169, 168, 171, 170, 172, 174, 173, 172, 175, 174, 176, 178, 177, 176, 179, 178, 180, 182, 181, 180, 183, 182, 184, 186, 185, 184, 187, 186, 188, 190, 189, 188, 191, 190, 192, 194, 193, 192, 195, 194, 196, 198, 197, 196, 199, 198, 200, 202, 201, 200, 203, 202, 204, 206, 205, 204, 207, 206, 208, 210, 209, 208, 211, 210, 212, 214, 213, 212, 215, 214, 216, 218, 217, 216, 219, 218, 220, 222, 221, 220, 223, 222, 224, 226, 225, 224, 227, 226, 228, 230, 229, 228, 231, 230, 232, 234, 233, 232, 235, 234, 236, 238, 237, 236, 239, 238, 240, 242, 241, 240, 243, 242, 244, 246, 245, 244, 247, 246, 248, 250, 249, 248, 251, 250, 252, 254, 253, 252, 255, 254, 256, 258, 257, 256, 259, 258, 260, 262, 261, 260, 263, 262, 264, 266, 265, 264, 267, 266, 268, 270, 269, 268, 271, 270, 272, 274, 273, 272, 275, 274, 276, 278, 277, 276, 279, 278, 280, 282, 281, 280, 283, 282, 284, 286, 285, 284, 287, 286, 288, 290, 289, 288, 291, 290, 292, 294, 293, 292, 295, 294, 296, 298, 297, 296, 299, 298, 300, 302, 301, 300, 303, 302, 304, 306, 305, 304, 307, 306, 308, 310, 309, 308, 311, 310, 312, 314, 313, 312, 315, 314, 316, 318, 317, 316, 319, 318, 320, 322, 321, 320, 323, 322, 324, 326, 325, 324, 327, 326, 328, 330, 329, 328, 331, 330, 332, 334, 333, 332, 335, 334, 336, 338, 337, 336, 339, 338, 340, 342, 341, 340, 343, 342, 344, 346, 345, 344, 347, 346, 348, 350, 349, 348, 351, 350, 352, 354, 353, 352, 355, 354, 356, 358, 357, 356, 359, 358, 360, 362, 361, 360, 363, 362, 364, 366, 365, 364, 367, 366, 368, 370, 369, 368, 371, 370, 372, 374, 373, 372, 375, 374, 376, 378, 377, 376, 379, 378, 380, 382, 381, 380, 383, 382, 377, 383, 380, 377, 378, 383, 98, 380, 95, 98, 377, 380, 95, 381, 94, 95, 380, 381, 129, 379, 376, 129, 130, 379, 90, 376, 99, 90, 129, 376, 99, 377, 98, 99, 376, 377, 85, 375, 372, 85, 86, 375, 130, 372, 379, 130, 85, 372, 379, 373, 378, 379, 372, 373, 365, 371, 368, 365, 366, 371, 384, 368, 83, 384, 365, 368, 83, 369, 82, 83, 368, 369, 165, 367, 364, 165, 166, 367, 78, 364, 385, 78, 165, 364, 385, 365, 384, 385, 364, 365, 73, 363, 360, 73, 74, 363, 166, 360, 367, 166, 73, 360, 367, 361, 366, 367, 360, 361, 353, 359, 356, 353, 354, 359, 170, 356, 71, 170, 353, 356, 71, 357, 70, 71, 356, 357, 201, 355, 352, 201, 202, 355, 66, 352, 171, 66, 201, 352, 171, 353, 170, 171, 352, 353, 61, 351, 348, 61, 62, 351, 202, 348, 355, 202, 61, 348, 355, 349, 354, 355, 348, 349, 386, 347, 344, 386, 387, 347, 206, 344, 59, 206, 386, 344, 59, 345, 58, 59, 344, 345, 237, 389, 388, 237, 238, 389, 54, 388, 207, 54, 237, 388, 207, 386, 206, 207, 388, 386, 49, 339, 336, 49, 50, 339, 238, 336, 389, 238, 49, 336, 389, 337, 387, 389, 336, 337, 329, 335, 332, 329, 330, 335, 242, 332, 47, 242, 329, 332, 47, 333, 46, 47, 332, 333, 390, 331, 328, 390, 391, 331, 42, 328, 243, 42, 390, 328, 243, 329, 242, 243, 328, 329, 37, 327, 324, 37, 38, 327, 391, 324, 331, 391, 37, 324, 331, 325, 330, 331, 324, 325, 317, 323, 320, 317, 318, 323, 278, 320, 35, 278, 317, 320, 35, 321, 34, 35, 320, 321, 309, 319, 316, 309, 310, 319, 30, 316, 279, 30, 309, 316, 279, 317, 278, 279, 316, 317, 25, 315, 312, 25, 26, 315, 310, 312, 319, 310, 25, 312, 319, 313, 318, 319, 312, 313, 305, 311, 308, 305, 306, 311, 290, 308, 31, 290, 305, 308, 31, 309, 30, 31, 308, 309, 392, 307, 304, 392, 393, 307, 394, 304, 291, 394, 392, 304, 291, 305, 290, 291, 304, 305, 395, 303, 300, 395, 396, 303, 393, 300, 307, 393, 395, 300, 307, 301, 306, 307, 300, 301, 293, 299, 296, 293, 294, 299, 397, 296, 398, 397, 293, 296, 398, 297, 399, 398, 296, 297, 400, 295, 292, 400, 401, 295, 402, 292, 403, 402, 400, 292, 403, 293, 397, 403, 292, 293, 404, 291, 288, 404, 394, 291, 401, 288, 295, 401, 404, 288, 295, 289, 294, 295, 288, 289, 281, 287, 284, 281, 282, 287, 405, 284, 406, 405, 281, 284, 406, 285, 407, 406, 284, 285, 297, 283, 280, 297, 298, 283, 399, 280, 408, 399, 297, 280, 408, 281, 405, 408, 280, 281, 29, 279, 276, 29, 30, 279, 298, 276, 283, 298, 29, 276, 283, 277, 282, 283, 276, 277, 269, 410, 409, 269, 270, 410, 254, 409, 43, 254, 269, 409, 43, 390, 42, 43, 409, 390, 411, 271, 268, 411, 412, 271, 413, 268, 255, 413, 411, 268, 255, 269, 254, 255, 268, 269, 414, 267, 264, 414, 415, 267, 412, 264, 271, 412, 414, 264, 271, 265, 270, 271, 264, 265, 257, 263, 260, 257, 258, 263, 416, 260, 417, 416, 257, 260, 417, 261, 418, 417, 260, 261, 419, 259, 256, 419, 420, 259, 421, 256, 422, 421, 419, 256, 422, 257, 416, 422, 256, 257, 423, 255, 252, 423, 413, 255, 420, 252, 259, 420, 423, 252, 259, 253, 258, 259, 252, 253, 245, 251, 248, 245, 246, 251, 424, 248, 425, 424, 245, 248, 425, 249, 426, 425, 248, 249, 261, 247, 244, 261, 262, 247, 418, 244, 427, 418, 261, 244, 427, 245, 424, 427, 244, 245, 41, 243, 240, 41, 42, 243, 262, 240, 247, 262, 41, 240, 428, 430, 429, 428, 431, 430, 233, 239, 236, 233, 234, 239, 218, 236, 55, 218, 233, 236, 55, 237, 54, 55, 236, 237, 432, 235, 232, 432, 433, 235, 434, 232, 219, 434, 432, 232, 219, 233, 218, 219, 232, 233, 435, 231, 228, 435, 436, 231, 433, 228, 235, 433, 435, 228, 235, 229, 234, 235, 228, 229, 221, 227, 224, 221, 222, 227, 437, 224, 438, 437, 221, 224, 438, 225, 439, 438, 224, 225, 440, 223, 220, 440, 441, 223, 442, 220, 443, 442, 440, 220, 443, 221, 437, 443, 220, 221, 444, 219, 216, 444, 434, 219, 441, 216, 223, 441, 444, 216, 223, 217, 222, 223, 216, 217, 209, 215, 212, 209, 210, 215, 445, 212, 446, 445, 209, 212, 446, 213, 447, 446, 212, 213, 225, 211, 208, 225, 226, 211, 439, 208, 448, 439, 225, 208, 448, 209, 445, 448, 208, 209, 53, 207, 204, 53, 54, 207, 226, 204, 211, 226, 53, 204, 211, 205, 210, 211, 204, 205, 197, 203, 200, 197, 198, 203, 182, 200, 67, 182, 197, 200, 67, 201, 66, 67, 200, 201, 449, 199, 196, 449, 450, 199, 451, 196, 183, 451, 449, 196, 183, 197, 182, 183, 196, 197, 452, 195, 192, 452, 453, 195, 450, 192, 199, 450, 452, 192, 199, 193, 198, 199, 192, 193, 185, 191, 188, 185, 186, 191, 454, 188, 455, 454, 185, 188, 455, 189, 456, 455, 188, 189, 457, 187, 184, 457, 458, 187, 459, 184, 460, 459, 457, 184, 460, 185, 454, 460, 184, 185, 461, 183, 180, 461, 451, 183, 458, 180, 187, 458, 461, 180, 187, 181, 186, 187, 180, 181, 173, 179, 176, 173, 174, 179, 462, 176, 463, 462, 173, 176, 463, 177, 464, 463, 176, 177, 189, 175, 172, 189, 190, 175, 456, 172, 465, 456, 189, 172, 465, 173, 462, 465, 172, 173, 65, 171, 168, 65, 66, 171, 190, 168, 175, 190, 65, 168, 175, 169, 174, 175, 168, 169, 161, 167, 164, 161, 162, 167, 146, 164, 79, 146, 161, 164, 79, 165, 78, 79, 164, 165, 466, 163, 160, 466, 467, 163, 468, 160, 147, 468, 466, 160, 147, 161, 146, 147, 160, 161, 469, 159, 156, 469, 470, 159, 467, 156, 163, 467, 469, 156, 163, 157, 162, 163, 156, 157, 149, 155, 152, 149, 150, 155, 471, 152, 472, 471, 149, 152, 472, 153, 473, 472, 152, 153, 474, 151, 148, 474, 475, 151, 476, 148, 477, 476, 474, 148, 477, 149, 471, 477, 148, 149, 478, 147, 144, 478, 468, 147, 475, 144, 151, 475, 478, 144, 151, 145, 150, 151, 144, 145, 137, 143, 140, 137, 138, 143, 479, 140, 480, 479, 137, 140, 480, 141, 481, 480, 140, 141, 153, 139, 136, 153, 154, 139, 473, 136, 482, 473, 153, 136, 482, 137, 479, 482, 136, 137, 77, 385, 483, 77, 78, 385, 154, 483, 139, 154, 77, 483, 139, 484, 138, 139, 483, 484, 125, 131, 128, 125, 126, 131, 110, 128, 91, 110, 125, 128, 91, 129, 90, 91, 128, 129, 485, 127, 124, 485, 486, 127, 487, 124, 111, 487, 485, 124, 111, 125, 110, 111, 124, 125, 488, 123, 120, 488, 489, 123, 486, 120, 127, 486, 488, 120, 127, 121, 126, 127, 120, 121, 113, 119, 116, 113, 114, 119, 490, 116, 491, 490, 113, 116, 491, 117, 492, 491, 116, 117, 493, 115, 112, 493, 494, 115, 495, 112, 496, 495, 493, 112, 496, 113, 490, 496, 112, 113, 497, 111, 108, 497, 487, 111, 494, 108, 115, 494, 497, 108, 115, 109, 114, 115, 108, 109, 101, 107, 104, 101, 102, 107, 498, 104, 499, 498, 101, 104, 499, 105, 500, 499, 104, 105, 117, 103, 100, 117, 118, 103, 492, 100, 501, 492, 117, 100, 501, 101, 498, 501, 100, 101, 89, 99, 96, 89, 90, 99, 118, 96, 103, 118, 89, 96, 103, 97, 102, 103, 96, 97, 97, 95, 92, 97, 98, 95, 102, 92, 107, 102, 97, 92, 107, 93, 106, 107, 92, 93, 109, 91, 88, 109, 110, 91, 114, 88, 119, 114, 109, 88, 119, 89, 118, 119, 88, 89, 121, 87, 84, 121, 122, 87, 126, 84, 131, 126, 121, 84, 131, 85, 130, 131, 84, 85, 484, 83, 80, 484, 384, 83, 138, 80, 143, 138, 484, 80, 143, 81, 142, 143, 80, 81, 145, 79, 76, 145, 146, 79, 150, 76, 155, 150, 145, 76, 155, 77, 154, 155, 76, 77, 157, 75, 72, 157, 158, 75, 162, 72, 167, 162, 157, 72, 167, 73, 166, 167, 72, 73, 169, 71, 68, 169, 170, 71, 174, 68, 179, 174, 169, 68, 179, 69, 178, 179, 68, 69, 181, 67, 64, 181, 182, 67, 186, 64, 191, 186, 181, 64, 191, 65, 190, 191, 64, 65, 193, 63, 60, 193, 194, 63, 198, 60, 203, 198, 193, 60, 203, 61, 202, 203, 60, 61, 205, 59, 56, 205, 206, 59, 210, 56, 215, 210, 205, 56, 215, 57, 214, 215, 56, 57, 217, 55, 52, 217, 218, 55, 222, 52, 227, 222, 217, 52, 227, 53, 226, 227, 52, 53, 229, 51, 48, 229, 230, 51, 234, 48, 239, 234, 229, 48, 239, 49, 238, 239, 48, 49, 241, 47, 44, 241, 242, 47, 246, 44, 251, 246, 241, 44, 251, 45, 250, 251, 44, 45, 253, 43, 40, 253, 254, 43, 258, 40, 263, 258, 253, 40, 263, 41, 262, 263, 40, 41, 265, 39, 36, 265, 266, 39, 270, 36, 410, 270, 265, 36, 410, 37, 391, 410, 36, 37, 277, 35, 32, 277, 278, 35, 282, 32, 287, 282, 277, 32, 287, 33, 286, 287, 32, 33, 289, 31, 28, 289, 290, 31, 294, 28, 299, 294, 289, 28, 299, 29, 298, 299, 28, 29, 301, 27, 24, 301, 302, 27, 306, 24, 311, 306, 301, 24, 311, 25, 310, 311, 24, 25, 313, 23, 20, 313, 314, 23, 318, 20, 323, 318, 313, 20, 323, 21, 322, 323, 20, 21, 325, 19, 16, 325, 326, 19, 330, 16, 335, 330, 325, 16, 335, 17, 334, 335, 16, 17, 337, 15, 12, 337, 338, 15, 387, 12, 347, 387, 337, 12, 347, 13, 346, 347, 12, 13, 349, 11, 8, 349, 350, 11, 354, 8, 359, 354, 349, 8, 359, 9, 358, 359, 8, 9, 361, 7, 4, 361, 362, 7, 366, 4, 371, 366, 361, 4, 371, 5, 370, 371, 4, 5, 373, 3, 0, 373, 374, 3, 378, 0, 383, 378, 373, 0, 383, 1, 382, 383, 0, 1, 502, 504, 503, 502, 505, 504, 506, 508, 507, 506, 509, 508, 510, 512, 511, 510, 513, 512, 514, 516, 515, 514, 517, 516, 518, 520, 519, 518, 521, 520, 522, 524, 523, 522, 525, 524, 526, 528, 527, 526, 529, 528, 530, 532, 531, 530, 533, 532, 534, 536, 535, 534, 537, 536, 538, 540, 539, 538, 541, 540, 542, 544, 543, 542, 545, 544, 546, 548, 547, 546, 549, 548, 550, 552, 551, 550, 553, 552, 554, 556, 555, 554, 557, 556, 558, 560, 559, 558, 561, 560, 562, 564, 563, 562, 565, 564)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Icosphere" type="MeshInstance" parent="."]

mesh = SubResource(5)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 0.640887, 0.0, 0.0, 0.0, 1.0, 0.0, 1.94549, 0.0)

[node name="Cube" type="MeshInstance" parent="."]

mesh = SubResource(10)
visible = true
transform = Transform(0.508081, 0.0, 0.0, 0.0, 0.508081, 0.0, 0.0, 0.0, 0.508081, 0.0, 1.11856, 0.0)

[node name="Cube001" type="MeshInstance" parent="."]

mesh = SubResource(13)
visible = true
transform = Transform(0.689583, 0.0, 0.0, 0.0, 0.689583, 0.0, 0.0, 0.0, 0.689583, 0.0, -0.0514436, 0.0)
